components:
    schemas:
        User:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                    example: "123e4567-e89b-12d3-a456-426614174000"
                name:
                    type: string
                    example: "John Doe"
                email:
                    type: string
                    format: email
                    example: "john.doe@example.com"
                role:
                    type: string
                    enum: [ADMIN, AUTHOR]
                    example: "AUTHOR"
                status:
                    type: string
                    enum: [ACTIVE, INACTIVE]
                    example: "ACTIVE"
                created_at:
                    type: string
                    format: date-time
                    example: "2025-02-12T10:30:00Z"
                updated_at:
                    type: string
                    format: date-time
                    example: "2025-02-12T10:30:00Z"

        RegistrationRequest:
            type: object
            required:
                - name
                - email
                - password
            properties:
                name:
                    type: string
                    minLength: 2
                    maxLength: 100
                    example: "John Doe"
                    description: User's full name
                email:
                    type: string
                    format: email
                    example: "john.doe@example.com"
                    description: User's email address (must be unique)
                password:
                    type: string
                    minLength: 8
                    pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$
                    example: "StrongP@ss123"
                    description: |
                        Password must contain:
                        - At least 8 characters
                        - One uppercase letter
                        - One lowercase letter
                        - One number
                        - One special character
                role:
                    type: string
                    enum: [ADMIN, AUTHOR]
                    example: "AUTHOR"
                    description: User role (defaults to AUTHOR if not specified)

        LoginRequest:
            type: object
            required:
                - email
                - password
            properties:
                email:
                    type: string
                    format: email
                    example: "john.doe@example.com"
                    description: User's registered email address
                password:
                    type: string
                    example: "StrongP@ss123"
                    description: User's password

        ForgotPasswordRequest:
            type: object
            required:
                - email
            properties:
                email:
                    type: string
                    format: email
                    example: "john.doe@example.com"
                    description: Email address to send password reset link

        ResetPasswordRequest:
            type: object
            required:
                - token
                - password
            properties:
                token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    description: Reset token received via email
                password:
                    type: string
                    minLength: 8
                    pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&#])[A-Za-z\d@$!%*?&#]{8,}$
                    example: "NewStrongP@ss123"
                    description: |
                        New password must contain:
                        - At least 8 characters
                        - One uppercase letter
                        - One lowercase letter
                        - One number
                        - One special character

        Error:
            type: object
            properties:
                status:
                    type: string
                    enum: [error]
                    example: "error"
                message:
                    type: string
                    example: "Invalid credentials"
                code:
                    type: string
                    example: "INVALID_CREDENTIALS"
                details:
                    type: object
                    description: Additional error details
